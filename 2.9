import { useState } from 'react'

const App = () => {
  const [persons, setPersons] = useState([
    { name: 'Arto Hellas' },
    { name: 'Ada Lovelace' },
    { name: 'Dan Abramov' },
    { name: 'Mary Poppendieck' }
  ])
  const [newName, setNewName] = useState('')
  const [filter, setFilter] = useState('') // <-- uusi tila rajausehdolle

  // Lomakkeen lähetys
  const handleSubmit = (event) => {
    event.preventDefault()

    if (persons.some(person => person.name === newName)) {
      alert(`${newName} is already added to phonebook`)
      return
    }

    const newPerson = { name: newName }
    setPersons(persons.concat(newPerson))
    setNewName('')
  }

  // Syötekenttien muutokset
  const handleNameChange = (event) => {
    setNewName(event.target.value)
  }

  const handleFilterChange = (event) => {
    setFilter(event.target.value)
  }

  // Filtteröidyt henkilöt, case-insensitiivinen vertailu
  const personsToShow = persons.filter(person =>
    person.name.toLowerCase().includes(filter.toLowerCase())
  )

  return (
    <div>
      <h2>Phonebook</h2>

      {/* Hakukenttä */}
      <div>
        filter shown with: <input value={filter} onChange={handleFilterChange} />
      </div>

      {/* Lomake uuden nimen lisäämiseksi */}
      <form onSubmit={handleSubmit}>
        <div>
          name: <input value={newName} onChange={handleNameChange} />
        </div>
        <div>
          <button type="submit">add</button>
        </div>
      </form>

      {/* Näytettävät henkilöt */}
      <h2>Numbers</h2>
      <ul>
        {personsToShow.map((person, index) => (
          <li key={index}>{person.name}</li>
        ))}
      </ul>
    </div>
  )
}

export default App
